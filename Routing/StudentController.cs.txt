using Routing.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;

namespace Routing.Controllers
{
    [RoutePrefix("api/student")]
    public class StudentController : ApiController
    {
        static List<Student> students = new List<Student>
        {
            new Student{Id = 1, Name = "Nazir"},
            new Student{Id = 1, Name = "Bashiir"},
            new Student{Id = 1, Name = "Shadab"}
        };
        [Route("~/api/teachers")]
        public IEnumerable<Teacher> GetTeachers()
        {
            List<Teacher> teachers = new List<Teacher>
            {
                new Teacher{Id = 1, Name = "Arif"},
                new Teacher{Id = 2, Name = "Sharif"},
                new Teacher{Id = 3, Name = "Hamid"},

            };
            return teachers;
        }
        //[Route("api/students")]
        [Route("")]
        public IEnumerable<Student> Get()
        {
            return students;
        }
        //[Route("api/students/{id}")]
        //[Route("{id}")]
        [Route("{id:int:min(1):max(3)}")]
        //[Route("{id:int:range(1,3)}")]
        public Student Get(int id)
        {
            return students.FirstOrDefault(x => x.Id == id);
        }

        // Get a student by name.
        [Route("{name:alpha}")]
        public Student Get(string name)
        {
            return students.FirstOrDefault(x => x.Name.ToLower() == name.ToLower());
        }
        //[Route("api/students/{id}/courses")]
        [Route("{id}/courses")]
        public IEnumerable<string> GetStudentCourses(int id)
        {
            if (id == 1)
                return new List<string> { "C#", "ASP.NET", "SQL Server"};
            else if(id == 2)
                return new List<string> { "C", "Javs", "PHP" };
            else 
                return new List<string> { "HTML", "CSS", "Js" };
        }
    }
}
